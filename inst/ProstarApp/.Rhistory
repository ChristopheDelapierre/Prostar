prostar()
library(Prostar)
prostar()
Prostar::Prostar()
Prostar::Prostar()
installed.packages(lib.loc=DAPAR.loc)["DAPAR","Version"]
installed.packages(lib.loc=DAPAR.loc)["DAPAR","Version"]
installed.packages(lib.loc=Prostar.loc)["Prostar","Version"]
DAPAR.loc
sessionInfo()
R.Version()
paste0("You are curently running on version", R.version(), "of R.")
paste0("You are curently running on version", R.Version(), "of R.")
paste0("You are curently running on version ", R.Version()[['version.string']], "of R.")
paste0("You are curently running on R version ", R.Version()[['version.string']],".")
paste0("You are currently running on R version ", R.Version()[['version.string']],".")
paste0("You are currently running on ", R.Version()[['version.string']],".")
runApp()
paste0("You are currently running on ", R.Version()[c("major","minor")],".")
paste0("You are currently running on ", R.Version()[[c("major","minor")]],".")
paste0("You are currently running on ", R.Version()[['version.string']],".")
Rversion <- R.Version()
Rversion[c("major","minor")]
c(Rversion["major"],Rversion["minor"])
unlist(Rversion["major"],Rversion["minor"])
unlist(Rversion[c("major","minor")])
paste0("You are currently running on R version", unlist(Rversion[c("major","minor")]),".")
runApp()
runApp()
installed.packages(lib.loc=BiocManager.loc)["BiocManager","Version"]
list.files()
search()
getDependencies("Prostar", dependencies = "Depends")
library(gtools)
getDependencies("Prostar", dependencies = "Depends")
getDependencies("Prostar")
runApp()
runApp()
available.packages("Prostar")
available.packages() %>% filter(Package == "Prostar")
available.packages() %>% as_tibble() %>% filter(Package == "Prostar")
(available.packages() %>% as_tibble() %>% filter(Package == "Prostar"))$Depends
available.packages()
available.packages(filters = "Depends")
available.packages(filters = "R_version")
available.packages() %in% filter(Package = "Prostar")
available.packages() %in% filter(Package == "Prostar")
available.packages() %in% as_tibble() %in% filter(Package == "Prostar")
package.version("Prostar")
Prostar_desc = available.packages() %>%
as_tibble() %>%
filter(Package == "Prostar")
library(Prostar)
Prostar_desc = available.packages() %>%
as_tibble() %>%
filter(Package == "Prostar")
description("Prostar")
description(Prostar)
packageDescription("Prostar")
Prostar_desc <- packageDescription("Prostar")
Prostar_desc$Depends
runApp()
runApp()
Prostar_desc$Depends
runApp()
runApp()
Prostar_desc <- packageDescription("Prostar")
Prostar_desc
Prostar_desc$Depends
(R.Version()[['version.string']])
packageDescription("Prostar")$Depends
currentRversion <- R.Version()[['version.string']])
currentRversion <- R.Version()[['version.string']]
currentRversion
Prostar_desc
Prostar_desc <- packageDescription("Prostar")$Depends
Prostar_desc
grepl("[0-9]",packageDescription("Prostar")$Depends)
grep("[0-9]",packageDescription("Prostar")$Depends)
strsplit("[0-9]",packageDescription("Prostar")$Depends)
grepexpr("[0-9]",packageDescription("Prostar")$Depends)
gregexpr("[0-9]",packageDescription("Prostar")$Depends)
gsub("[0-9]","",packageDescription("Prostar")$Depends)
gsub(!"[0-9]","",packageDescription("Prostar")$Depends)
gsub("[^0-9.]","",packageDescription("Prostar")$Depends)
Prostar_desc <- gsub("[^0-9.]","",packageDescription("Prostar")$Depends)
R.Version()[['version.string']]
currentRversion <- gsub("[^0-9.]","",R.Version()[['version.string']])
currentRversion
currentRversion <- gsub("[^0-9]","",R.Version()[['version.string']])
currentRversion
strsplit(R.Version()[['version.string']],"(")
sep(R.Version()[['version.string']],"(")
strsplit(R.Version()[['version.string']],'(')
strsplit(R.Version()[['version.string']],'\(')
strsplit(R.Version()[['version.string']],"(")
strsplit(R.Version()[['version.string']],"\\(")
strsplit(R.Version()[['version.string']],"\\(")[1]
gsub("[^0-9.]","", strsplit(R.Version()[['version.string']],"\\(")[1])
(strsplit(R.Version()[['version.string']],"\\(")[1])
(strsplit(R.Version()[['version.string']],"\\(")[[1]])
truc <- strsplit(R.Version()[['version.string']],"\\(")
(strsplit(R.Version()[['version.string']],"\\(")[[1]][1]])
strsplit(R.Version()[['version.string']],"\\(")[[1]][1]]
(strsplit(R.Version()[['version.string']],"\\("))[[1]][1]
gsub("[^0-9.]","", (strsplit(R.Version()[['version.string']],"\\("))[[1]][1])
shiny::runApp()
runApp()
gsub("[^0-9.]","",packageDescription("Prostar")$Depends)
runApp()
packageDescription("Prostar")$Depends
Prostar_desc
Prostar_desc <- gsub("[^0-9.]","",packageDescription("Prostar")$Depends)
Prostar_desc
Prostar_desc != currentRversion
currentRversion <- gsub("[^0-9.]","", (strsplit(R.Version()[['version.string']],"\\("))[[1]][1])
currentRversion
Prostar_desc != currentRversion
Prostar_desc
currentRversion
currentRversion >= Prostar_desc
currentRversion
Prostar_desc
currentRversion < Prostar_desc
runApp()
Prostar_desc
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
runApp()
runApp()
runApp()
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
output$citationText <- renderUI({
tagList(
tags$div(style="background-color: lightgrey;",
tags$p(class="body",tags$b("Maintaining ProStaR as free software is a heavy and time-consuming
duty. If you use it, please cite the following reference:")),
tags$p(tags$i("S. Wieczorek, F. Combes, C. Lazar, Q. Giai-Gianetto,
L. Gatto, A. Dorffer, A.-M. Hesse, Y. Coute, M. Ferro,
C. Bruley and T. Burger."),
tags$u("DAPAR & ProStaR: software to perform statistical
analyses in quantitative discovery."),
tags$b("Bioinformatics"),", 33(1), 135-136, 2017.",
tags$a("http://doi.org/10.1093/bioinformatics/btw580", href="http://doi.org/10.1093/bioinformatics/btw580", target="_blank")
)
output$citationText <- renderUI({
tagList(
tags$div(style="background-color: lightgrey;",
tags$p(class="body",tags$b("Maintaining ProStaR as free software is a heavy and time-consuming
duty. If you use it, please cite the following reference:")),
tags$p(tags$i("S. Wieczorek, F. Combes, C. Lazar, Q. Giai-Gianetto,
L. Gatto, A. Dorffer, A.-M. Hesse, Y. Coute, M. Ferro,
C. Bruley and T. Burger."),
tags$u("DAPAR & ProStaR: software to perform statistical
analyses in quantitative discovery."),
tags$b("Bioinformatics"),", 33(1), 135-136, 2017.",
tags$a("http://doi.org/10.1093/bioinformatics/btw580", href="http://doi.org/10.1093/bioinformatics/btw580", target="_blank")
)
)
)
})
output$citationText <- renderUI({
tagList(
tags$div(style="background-color: lightgrey;",
tags$p(class="body",tags$b("Maintaining ProStaR as free software is a heavy and time-consuming
duty. If you use it, please cite the following reference:")),
tags$p(tags$i("S. Wieczorek, F. Combes, C. Lazar, Q. Giai-Gianetto,
L. Gatto, A. Dorffer, A.-M. Hesse, Y. Coute, M. Ferro,
C. Bruley and T. Burger."),
tags$u("DAPAR & ProStaR: software to perform statistical
analyses in quantitative discovery."),
tags$b("Bioinformatics"),", 33(1), 135-136, 2017.",
tags$a("http://doi.org/10.1093/bioinformatics/btw580", href="http://doi.org/10.1093/bioinformatics/btw580", target="_blank")
)
)
)
})
output$versionsText <- renderUI({
t <- sessionInfo()
daparVersion <- installed.packages(lib.loc=DAPAR.loc)["DAPAR","Version"]
ProstarVersion <- installed.packages(lib.loc=Prostar.loc)["Prostar","Version"]
tagList(
tags$p(class="body",
tags$b("DAPAR"),
" and ",
tags$b("Prostar"),
" form a software suite devoted to the differential analysis of
quantitative data resulting from discovery proteomics experiments.",
tags$br(),
"It is composed of two distinct ",
tags$b("R"),
" packages:",
tags$ul(
tags$li(tags$p(tags$a("Prostar", href="http://www.bioconductor.org/packages/release/bioc/html/Prostar.html", target="_blank"),paste0(" (version ",
ProstarVersion,"), which proposes a web-based graphical user interface to DAPAR."))),
tags$li(tags$p(tags$a("DAPAR", href="http://www.bioconductor.org/packages/release/bioc/html/DAPAR.html", target="_blank"),paste0(" (version ",
daparVersion,"), which contains all the routines to analyze and visualize proteomics data.")))
)
)
)
})
renderUI({
tagList(
tags$div(style="background-color: lightgrey;",
tags$p(class="body",tags$b("Maintaining ProStaR as free software is a heavy and time-consuming
duty. If you use it, please cite the following reference:")),
tags$p(tags$i("S. Wieczorek, F. Combes, C. Lazar, Q. Giai-Gianetto,
L. Gatto, A. Dorffer, A.-M. Hesse, Y. Coute, M. Ferro,
C. Bruley and T. Burger."),
tags$u("DAPAR & ProStaR: software to perform statistical
analyses in quantitative discovery."),
tags$b("Bioinformatics"),", 33(1), 135-136, 2017.",
tags$a("http://doi.org/10.1093/bioinformatics/btw580", href="http://doi.org/10.1093/bioinformatics/btw580", target="_blank")
)
)
)
renderUI({
tagList(
tags$div(style="background-color: lightgrey;",
tags$p(class="body",tags$b("Maintaining ProStaR as free software is a heavy and time-consuming
duty. If you use it, please cite the following reference:")),
tags$p(tags$i("S. Wieczorek, F. Combes, C. Lazar, Q. Giai-Gianetto,
L. Gatto, A. Dorffer, A.-M. Hesse, Y. Coute, M. Ferro,
C. Bruley and T. Burger."),
tags$u("DAPAR & ProStaR: software to perform statistical
analyses in quantitative discovery."),
tags$b("Bioinformatics"),", 33(1), 135-136, 2017.",
tags$a("http://doi.org/10.1093/bioinformatics/btw580", href="http://doi.org/10.1093/bioinformatics/btw580", target="_blank")
)
)
)
})
>
renderUI({
tagList(
tags$div(style="background-color: lightgrey;",
tags$p(class="body",tags$b("Maintaining ProStaR as free software is a heavy and time-consuming
duty. If you use it, please cite the following reference:")),
tags$p(tags$i("S. Wieczorek, F. Combes, C. Lazar, Q. Giai-Gianetto,
L. Gatto, A. Dorffer, A.-M. Hesse, Y. Coute, M. Ferro,
C. Bruley and T. Burger."),
tags$u("DAPAR & ProStaR: software to perform statistical
analyses in quantitative discovery."),
tags$b("Bioinformatics"),", 33(1), 135-136, 2017.",
tags$a("http://doi.org/10.1093/bioinformatics/btw580", href="http://doi.org/10.1093/bioinformatics/btw580", target="_blank")
)
)
)
})
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
